name: Release NPM project

on:
  create:
    branches:
      - release/*
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure GPG key settings
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_config_global: true
          git_committer_name: 'pallasCI'
          git_committer_email: 'continuous.integration@pallas.uk'
          git_commit_gpgsign: true
          git_push_gpgsign: false
          git_tag_gpgsign: true

      - name: Extract branch name
        id: extract_branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / - | sed 's/release-*//')" >> $GITHUB_ENV

      - name: 'change version'
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        uses: reedyuk/npm-version@1.2.2
        with:
          version: ${{ env.BRANCH_NAME }}
          git-tag-version: 'true'
        continue-on-error: true

      - name: Run NPM Install
        run: npm ci

      - name: Run NPM Test
        run: npm run test -- --coverage

      - name: Test Report
        uses: dorny/test-reporter@v1.7.0
        if: success() || failure() # run this step even if previous step failed
        with:
          name: JEST Tests # Name of the check run which will be created
          path: junit.xml # Path to test results
          reporter: jest-junit # Format of test results
        continue-on-error: true

      - name: Run NPM Build
        run: npm run build --if-present

      - name: Save Code Linting Report JSON
        run: npm run lint --if-present
        continue-on-error: true

      - name: ESLint Annotate from Report JSON
        uses: ataylorme/eslint-annotate-action@2.2.0
        with:
          report-json: 'eslint_report.json'

      - name: Upload ESLint report
        uses: actions/upload-artifact@v2
        with:
          name: eslint_report.json
          path: ${GITHUB_WORKSPACE}/eslint_report.json

      # Automatic Scanner is enabled
      - name: SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build docs ðŸ“¦
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: |
          cd docs
          npm ci
          npm run build

      - name: Publish package on NPM ðŸ“¦
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npm publish --access public
        env:
          GITHUB_USER: 'pallasCI <continuous.integration@pallas.uk>'
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GITHUB_REPOSITORY: 'website-core'
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push the Release Change into the Branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin release/${{ env.BRANCH_NAME }}

      - name: Increase Patch Version
        run: 'npm version patch -m "[NPM Release] Moving to Next Dev Version"'

      - name: Push the Patch change into the Branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin release/${{ env.BRANCH_NAME }}

      - name: Create pull request into main
        uses: repo-sync/pull-request@v2.12.1
        with:
          source_branch: release/${{ env.BRANCH_NAME }}
          destination_branch: 'main'
          github_token: ${{ secrets.SCM_TOKEN }}
          pr_title: 'Merge Release back to main'
          pr_body: 'Performed successfull release, needs to be merged back into main branch'
